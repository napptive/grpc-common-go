syntax = "proto3";

package common;
option go_package = "github.com/napptive/grpc-common-go;grpc_common_go";

import "validate/validate.proto";

// Empty message as required by gRPC for services not requiring any parameters.
message EmptyRequest{
}

// OpStatus enumeration defining the possible status of an operation.
enum OpStatus{
    // Unknown operation status indicates an error in the processing of the request as all operations should
    // have a determined status.
    UNKNOWN = 0;
    // Success indicates that the operation was completed successfully.
    SUCCESS = 1;
}

// OpResponse with a common definition for the result of executing an operation through gRPC. Notice that
// in case of an error, the call must fail unless the operation is executed asynchronously and this
// message contains the result of a past operation.
message OpResponse{
    // Status of the operation.
    OpStatus status = 1;
    // UserInfo with additional information to show to the user.
    string user_info = 2;
}

// ErrorDetails with the detail of a NError
message ErrorDetails {
    // The stack trace entries indicating where the error occurred.
    repeated string stack_entries = 1;
    // Additional debugging information provided by the server.
    string detail = 2;
}


// GenericListRequest with the information required to List entities in a given environment.
message GenericListRequest {
    // UserId with the user identifier
    string user_id = 1 [(validate.rules).string.min_len = 1];
    // environmentId with the environment identifier
    string environment_id = 2 [(validate.rules).string.min_len = 1];
    // IncludeYAMLConversion determines if the raw YAML representation is also included.
    bool include_yaml_conversion = 3;
    // IncludeJSONConversion determines if the raw JSON representation is also included.
    bool include_json_conversion = 4;
}

// GenericRemoveRequest with the information required to identify an entity for removal.
// The type of entity is dictated by the rpc method being called.
message GenericRemoveRequest{
    // UserId with the user identifier as generated by the platform for tracing purposes.
    string user_id = 1 [(validate.rules).string.min_len = 1];
    // environmentId with the environment identifier
    string environment_id = 2 [(validate.rules).string.min_len = 1];
    // Name of the entity.
    string name = 3 [(validate.rules).string.min_len = 1];
}

message GenericGetRequest{
    // UserId with the user identifier
    string user_id = 1 [(validate.rules).string.min_len = 1];
    // EnvironmentId with the environment identifier
    string environment_id = 2 [(validate.rules).string.min_len = 1];
    // name with the entity name (it is unique by environment)
    string name = 3 [(validate.rules).string.min_len = 1];
    // IncludeYAMLConversion determines if the raw YAML representation is also included.
    bool include_yaml_conversion = 4;
    // IncludeJSONConversion determines if the raw JSON representation is also included.
    bool include_json_conversion = 5;
}